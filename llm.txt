bitUI Framework Documentation
=======================================

Overview
--------
bitUI is a simple, lightweight HTML + CSS framework for building clean, responsive layouts. It offers:

- A **12-column Flexbox grid** (using float-based column widths for older browsers)
- **Panels** for consistent content styling
- **Utility classes** for typography, alignment, and colors
- **Themes** (light, warm, dim, dark) controlled by data attributes
- **CSS variables** for quick customization

Important Note on Customization
-------------------------------
bitUI lets you set core CSS variables — such as font family, border radius, container widths, column gap, and text size — **before** downloading your final stylesheet. The AI will rely on bitUI’s **existing classes** (e.g., ```.row```, ```.col-4```, ```.panel```), but won’t change these core variables or your custom settings.

Core Concepts
------------
1. Layout Structure  
   - **Container** (```.container```) centers and limits width using your custom CSS variables.  
   - **Row** (```.row```) creates a flex container that holds **Columns**.  
   - **Columns** (```.col-1``` through ```.col-12```) float left, with optional **-sm** variants for smaller screens.  
   - **Panels** (```.panel light``` or ```.panel dark```) group content with consistent spacing and styling.

2. Grid System
   - **12-column Flexbox grid** with float-based column widths for broad browser support.
   - **Responsive breakpoints** at **45em (720px)**. Above 720px, normal ```.col-X``` classes apply; below 720px, use ```.col-X-sm``` classes.
   - Column widths are computed as percentages: e.g., ```.col-6``` = 50%, ```.col-4``` = 33.33%, etc.
   - **```--column-gap```** controls spacing between columns (applied as margins).

3. Themes
   - Set ```data-theme="light"```, ```data-theme="warm"```, ```data-theme="dim"```, or ```data-theme="dark"``` on a parent element (usually ```<body>```).
   - Colors, backgrounds, borders, and fonts adapt automatically.
   - Example: ```<body data-theme="dark">```

4. Panels
   - Light panel: ```<div class="panel light"> ... </div>```
   - Dark panel: ```<div class="panel dark"> ... </div>```
   - Ideal for card-like sections, forms, or grouping related content
   - Spacing, borders, and rounding (```--border-radius```) controlled by root variables

5. Typography & Utilities
   - **Font weights**: ```.f-light``` (300), ```.f-regular``` (400), ```.f-heavy``` (700)
   - **Font sizes**: ```.f-small``` (0.75x base), ```.f-large``` (1.25x base)
   - **Text alignment**: ```.left```, ```.center```, ```.right```, ```.justify```
     - Note: ```.center``` sets ```margin-left: auto; margin-right: auto; text-align: center```
   - **Text colors**: ```.f-red```, ```.f-orange```, ```.f-green```, ```.f-blue```, ```.f-purple```, ```.f-gray```, ```.f-white```, ```.f-black```
   - **Floats**: ```.float-right``` can float elements to the right (useful for images or small elements)

6. Buttons
   - Base button: ```<button class="btn">```
   - Color variants: ```.btn green```, ```.btn blue```, ```.btn red```, ```.btn purple```
   - Holo style: ```.btn holo``` (border + white background)
   - Disabled state: ```.btn disabled``` (dimmed + no pointer events)

7. Row & Column Alignment
   - Row alignment: ```.row.left```, ```.row.center```, ```.row.right```
   - Column alignment: ```.col.left```, ```.col.center```, ```.col.right```
   - Control how columns and text are positioned within the grid.

Basic Template
--------------
```html
<body data-theme="light">
  <main class="content">
    <div class="container">
      <section>
        <div class="panel light">
          <div class="row">
            <div class="col-12">
              <h1>Welcome to bitUI</h1>
              <p class="font-regular">Your content goes here.</p>
            </div>
          </div>
        </div>
      </section>
    </div>
  </main>
</body>
```

Common Layout Patterns
----------------------
1. Two-Column Layout
```html
<div class="row">
  <div class="col-6">
    <div class="panel light">
      <h3>Left Side</h3>
      <p>50% width on desktop; stacks on mobile.</p>
    </div>
  </div>
  <div class="col-6">
    <div class="panel light">
      <h3>Right Side</h3>
      <p>Also 50% width on desktop.</p>
    </div>
  </div>
</div>
```

2. Multi-Theme Panels
```html
<div class="row">
  <div class="col-6">
    <div class="panel dark">
      <h3>Dark Panel</h3>
      <p>Adapts automatically to dark theme settings.</p>
    </div>
  </div>
  <div class="col-6">
    <div class="panel light">
      <h3>Light Panel</h3>
      <p>Default panel style with light background.</p>
    </div>
  </div>
</div>
```

3. Example Button
```html
<button class="btn green">Save Changes</button>
<button class="btn holo">Secondary Action</button>
<button class="btn disabled">Disabled</button>
```

Best Practices
--------------
1. **Panel for Grouping**: Wrap sections in ```<div class="panel ...">``` for consistent spacing and borders.

2. **Utilize Themes**: Toggle ```data-theme``` at the root to switch between light, warm, dim, or dark.

3. **Responsive Mindset**: Use ```.col-*-sm``` classes under 720px for mobile-friendly designs.

4. **Utility Classes**: Leverage classes like ```.f-green``` or ```.right``` for quick style tweaks without extra CSS.

5. **Modular Design**: Keep content in panels and columns; nest additional rows/columns as needed.

```

With bitUI, you can assemble modern interfaces quickly by combining these core classes and utilities.  
Adjust fonts, sizes, spacing, and colors in the downloaded CSS; let the AI focus on generating HTML using bitUI’s pre-built classes.

```